{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rachn\\\\OneDrive\\\\Desktop\\\\Video-Meeting\\\\src\\\\RecordScreen\\\\recordscreen.js\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Button, Badge } from \"antd\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ScreenRecording = _ref => {\n  let {\n    screen,\n    audio,\n    video,\n    downloadRecordingPath,\n    downloadRecordingType\n  } = _ref;\n  const [recordingNumber, setRecordingNumber] = useState(0);\n\n  const RecordView = () => {\n    const {\n      status,\n      startRecording: startRecord,\n      stopRecording: stopRecord,\n      mediaBlobUrl\n    } = useReactMediaRecorder({\n      screen,\n      audio,\n      video\n    });\n\n    const startRecording = () => {\n      return startRecord();\n    };\n\n    const stopRecording = () => {\n      const currentTimeSatmp = new Date().getTime();\n      setRecordingNumber(currentTimeSatmp);\n      return stopRecord();\n    };\n\n    const viewRecording = () => {\n      window.open(mediaBlobUrl, \"_blank\").focus();\n    };\n\n    const downloadRecording = () => {\n      const pathName = `${downloadRecordingPath}_${recordingNumber}.${downloadRecordingType}`;\n\n      try {\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          // for IE\n          window.navigator.msSaveOrOpenBlob(mediaBlobUrl, pathName);\n        } else {\n          // for Chrome\n          const link = document.createElement(\"a\");\n          link.href = mediaBlobUrl;\n          link.download = pathName;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: \"12\",\n      style: {\n        lineHeight: \"24px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, status && status !== \"stopped\" && /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Screen Recording Status: \", status && status.toUpperCase()), status && status === \"recording\" && /*#__PURE__*/React.createElement(Badge, {\n      className: \"screen-recording-badge\",\n      color: \"#faad14\",\n      status: \"processing\",\n      offset: [2, 0],\n      style: {\n        marginLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: \"12\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, status && status !== \"recording\" && /*#__PURE__*/React.createElement(\"button\", {\n      size: \"small\",\n      onClick: startRecording,\n      className: \"margin-left-sm\",\n      ghost: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, mediaBlobUrl ? \"Record again\" : \"Record your meeting\"), status && status === \"recording\" && /*#__PURE__*/React.createElement(\"button\", {\n      size: \"small\",\n      onClick: stopRecording,\n      type: \"danger\",\n      icon: \"stop\",\n      className: \"margin-left-sm\",\n      ghost: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Stop Recording\"), mediaBlobUrl && status && status === \"stopped\" && /*#__PURE__*/React.createElement(\"button\", {\n      size: \"small\",\n      onClick: viewRecording,\n      className: \"viewRecording margin-left-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"View\"), downloadRecordingType && mediaBlobUrl && status && status === \"stopped\" && /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: downloadRecording,\n      type: \"primary\",\n      icon: \"download\",\n      className: \"downloadRecording margin-left-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"Download\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Scren-Record-Wrapper\",\n    style: {\n      padding: \"5px 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, RecordView());\n};\n\nexport default ScreenRecording;","map":{"version":3,"sources":["C:/Users/rachn/OneDrive/Desktop/Video-Meeting/src/RecordScreen/recordscreen.js"],"names":["React","useState","Row","Col","Button","Badge","useReactMediaRecorder","Text","ScreenRecording","screen","audio","video","downloadRecordingPath","downloadRecordingType","recordingNumber","setRecordingNumber","RecordView","status","startRecording","startRecord","stopRecording","stopRecord","mediaBlobUrl","currentTimeSatmp","Date","getTime","viewRecording","window","open","focus","downloadRecording","pathName","navigator","msSaveOrOpenBlob","link","document","createElement","href","download","body","appendChild","click","removeChild","err","console","error","lineHeight","toUpperCase","marginLeft","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Badge } from \"antd\";\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nconst ScreenRecording = ({\r\n  screen,\r\n  audio,\r\n  video,\r\n  downloadRecordingPath,\r\n  downloadRecordingType\r\n}) => {\r\n  const [recordingNumber, setRecordingNumber] = useState(0);\r\n    const RecordView = () => {\r\n        const {\r\n        status,\r\n        startRecording: startRecord,\r\n        stopRecording: stopRecord,\r\n        mediaBlobUrl\r\n        } = useReactMediaRecorder({ screen, audio, video });\r\n        const startRecording = () => {\r\n            return startRecord();\r\n            };\r\n        const stopRecording = () => {\r\n            const currentTimeSatmp = new Date().getTime();\r\n            setRecordingNumber(currentTimeSatmp);\r\n            return stopRecord();\r\n            };\r\n        const viewRecording = () => {\r\n            window.open(mediaBlobUrl, \"_blank\").focus();\r\n            };\r\n        const downloadRecording = () => {\r\n            const pathName = `${downloadRecordingPath}_${recordingNumber}.${downloadRecordingType}`;\r\n            try {\r\n                if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                // for IE\r\n                window.navigator.msSaveOrOpenBlob(mediaBlobUrl, pathName);\r\n                } else {\r\n                // for Chrome\r\n                const link = document.createElement(\"a\");\r\n                link.href = mediaBlobUrl;\r\n                link.download = pathName;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                }\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n            };\r\n        return (\r\n            <Row>\r\n                <Col span=\"12\" style={{ lineHeight: \"24px\" }}>\r\n                {status && status !== \"stopped\" && (\r\n                    <Text>\r\n                    Screen Recording Status: {status && status.toUpperCase()}\r\n                    </Text>\r\n                )}\r\n                {status && status === \"recording\" && (\r\n                    <Badge\r\n                    className=\"screen-recording-badge\"\r\n                    color=\"#faad14\"\r\n                    status=\"processing\"\r\n                    offset={[2, 0]}\r\n                    style={{\r\n                        marginLeft: \"5px\"\r\n                    }}\r\n                    />\r\n                )}\r\n                </Col>\r\n                <Col span=\"12\" style={{ textAlign: \"right\" }}>\r\n                {status && status !== \"recording\" && (\r\n                    <button\r\n                    size=\"small\"\r\n                    onClick={startRecording}\r\n                    className=\"margin-left-sm\"\r\n                    ghost\r\n                    >\r\n                    {mediaBlobUrl ? \"Record again\" : \"Record your meeting\"}\r\n                    </button>\r\n                )}\r\n                {status && status === \"recording\" && (\r\n                    <button\r\n                    size=\"small\"\r\n                    onClick={stopRecording}\r\n                    type=\"danger\"\r\n                    icon=\"stop\"\r\n                    className=\"margin-left-sm\"\r\n                    ghost\r\n                    >\r\n                    Stop Recording\r\n                    </button>\r\n                )}\r\n                {mediaBlobUrl && status && status === \"stopped\" && (\r\n                    <button\r\n                    size=\"small\"\r\n                    onClick={viewRecording}\r\n                    className=\"viewRecording margin-left-sm\"\r\n                    >\r\n                    View\r\n                    </button>\r\n                )}\r\n                {downloadRecordingType &&\r\n                    mediaBlobUrl &&\r\n                    status &&\r\n                    status === \"stopped\" && (\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={downloadRecording}\r\n                        type=\"primary\"\r\n                        icon=\"download\"\r\n                        className=\"downloadRecording margin-left-sm\"\r\n                    >\r\n                        Download\r\n                    </Button>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            );\r\n    };\r\nreturn (\r\n    <div className=\"Scren-Record-Wrapper\" style={{ padding: \"5px 20px\" }}>\r\n      {RecordView()}\r\n    </div>\r\n  );\r\n};\r\nexport default ScreenRecording;"]},"metadata":{},"sourceType":"module"}